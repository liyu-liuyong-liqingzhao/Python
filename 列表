a=[1,2,3,4,5]
a.append(6)     #append只能加一个元素
a.extend([7,8]) #extend只能加入列表
a.insert(0,0)   #在指定位置插入元素，第一个是下标，第二个是元素
a.remove(0)     #移除某个元素
del a[0]        #删除某个指定下标元素
del a           #删除整个列表
b=a.pop()       #取出最后一个元素
a.pop(1)        #取出指定下标元素

切片：a=[A,B,C,D,E,F,G]
a[1:3]          #表示下标1到3的元素，左闭右开，即只有B,C
a[:3]           #从第一个元素开始，左闭右开，即A,B,C
a[5:]           #包括最后一个元素，即F,G
a[:]            #复制整个列表

列表比较大小只比较下标为0的元素。
a=[1,2]
b=[3,4]
c=a+b               #c为[1,2,3,4]，+号把第二个列表元素加到第一个列表后面，
                    #但是不能列表+一个元素，必须+号两侧都为列表。
a*2                 #[1,2,1,2]
1 in a              #输出True
1 not in a          #输出False
a=[1,2,[3,4]]
3 in a              #输出False,只能判断第一层,不能判断列表中其他列表的元素。
3 in a[2]           #输出True,[3,4]在a中下标为2.
a[2][0]             #输出3.
a.count(1)          #输出该元素出现次数
a.index(1,0,2)      #输出该元素第一次出现的下标,第一个参数为该元素,
                    #后面两个为索引范围的下标,左闭右开,即下标0和1.
a.reverse()         #反转列表,不会显示列表,但已经执行完了.
b=[2,4,5,1,3]
b.sort()            #默认从小到大排序.
b.sort(reverse=True)#从大到小排序,sort前面还有两个默认参数,这是第三个参数.

c=b                 #当b改变时,c跟着改变.相当于两个指针指向同一内存.
d=b[:]              #而d不会改变,相当于开辟了新的内存.
