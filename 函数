import random
function.__doc__             #显示函数文档
a=random.randint(1,10)随机生成1到10的整数（闭区间）

type()判断数据类型
eval(str)                    #将字符串转化为合适的类型.
isinstance(a,int)判断a是否为int型，返回True或者False.
科学计数法1e10是浮点型
>>>1e2    #输出100.0

**幂运算操作符比左侧一元操作符优先级高，比右侧一元操作符优先级低。
>>>-3 ** 2    #输出-9,先乘方再负号。
>>>3 ** -2    #输出1/9，先负号再乘方。

优先级:幂运算(满足上面的规则)>正负号>算术操作符>比较操作符>逻辑操作符(not>and>or)

else不满足就近原则，只和对齐的if配对.
if ():   #if和elif可以不用括号，和条件中间加空格即可。
    if ():
else:    #else和第一个if配对。
条件判断
x if x<y else y   #如果满足条件则输出前一个值否则输出后一个值。

>>>assert 1>2     #条件不满足则程序崩溃。

while ():         #条件可以不用括号，循环体只需缩进不用花括号。

range(1,10)       #包含1不包含10.
range(5)          #表示0-4，不包含5，默认从0开始。
range(1,10,2)     #表示差为2,数据为1,3,5,7,9。

>>>a=[1,11,2,22,3,33]
>>>list(enumerate(a))
[(0,1),(1,11),(2,2),(3,22),(4,3),(5,33)]   #将每个元素和它的下标组成一个元组.
>>>b=[9,99,8,88]
>>>list(zip(a,b))
[(1,9),(11,99),(2,8),(22,88)]              #将两个列表下标相同的数据组成元组.

>>>def function(*arr)        #定义未知数量参数的函数需要加*号,类似数组用法.
       print(arr[0])
>>>function(1,2,3,4,5)
1                            #输出下标为0的参数.
>>>def function1(*arr,temp)  #当未知数量的参数和其他参数混合时,需要单独定义其他参数.
       print(arr\ntemp)
>>>function1(1,2,3,temp=4)   
>>>def function1(*arr,temp=4)#或者设为默认参数.

>>>a=1
>>>def func():
       a+=1
>>>func()                    #会报错,全局变量必须在函数内重新声明才能使用.
>>>def func():
       a=1                   #改成这样
       global a              #或使用global
       a+=1      
>>>def fun1():
       b=2
       def fun2():
              nonlocal b     #内嵌函数中也可以使用nonlocal,避免fun2无法识别变量b.
              b+=2
              return b
       return fun2()

>>>a=lambda x : x * x        #使用lambda定义函数.
>>>a(2)
4

>>>def odd(x):
       return x%2
>>>t=range(10)
>>>s=filter(odd,t)           #第一个参数为筛选方式,第二个为范围,返回结果为True的值.
>>>list(s)                   #因为奇数模2为正数相当于True.
[1,3,5,7,9]
>>>list(filter(lambda x: x%2,range(10)))#也可以这样使用.

>>>list(map(lambda x : x*x,range(5)))
[0,1,4,9,16]                 #第一个参数为方式,第二个为范围,返回每个值运行后的结果.
